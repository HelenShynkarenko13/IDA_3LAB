"""
PI-201 Shynkarenko O.M.
lab_8 variant_6
"""
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import dendrogram, linkage
from scipy.spatial.distance import pdist
from sklearn.cluster import KMeans

# Задаємо кількість об'єктів та кількість класів
n = 160
n_classes = 3
# Генеруємо випадкові дані для x, y та номерів класів
np.random.seed(0)
x = np.random.rand(n)
y = np.random.rand(n)
class_labels = np.random.randint(0, n_classes, size=n)

# Створюємо DataFrame для даних
data = pd.DataFrame({'x': x, 'y': y, 'class': class_labels})

# Візуалізація даних за класами
plt.figure(figsize=(8, 6))
colors = ['r', 'g', 'b']
for class_label in range(n_classes):
    plt.scatter(data['x'][data['class'] == class_label], data['y'][data['class'] == class_label], label=f'Class {class_label}')

plt.title('Розподіл даних за класами')
plt.xlabel('Ознака x')
plt.ylabel('Ознака y')
plt.legend()
plt.show()

# Кластеризація за допомогою k-середніх
n_clusters = n_classes
kmeans = KMeans(n_clusters=n_clusters, random_state=0)
kmeans.fit(data[['x', 'y']])
data['cluster'] = kmeans.labels_
cluster_centers = kmeans.cluster_centers_

# Візуалізація результатів кластеризації
plt.figure(figsize=(8, 6))
colors = ['r', 'g', 'b']
for i in range(n_clusters):
    plt.scatter(data['x'][data['cluster'] == i], data['y'][data['cluster'] == i], c=colors[i], label=f'Cluster {i + 1}')

# Відображення центрів кластерів
for i in range(n_clusters):
    center_x = cluster_centers[i, 0]
    center_y = cluster_centers[i, 1]
    plt.text(center_x, center_y, f'Center {i + 1}\n({center_x:.2f}, {center_y:.2f})', fontsize=12, ha='center',
             va='bottom')
plt.legend()
plt.title('Результати кластеризації')
plt.xlabel('Ознака x')
plt.ylabel('Ознака y')
plt.show()


distance_matrix = pdist(data[['x', 'y']])
Z = linkage(distance_matrix, method='ward')

plt.figure(figsize=(10, 8))
dendrogram(Z, labels=data.index)
plt.title('Дендрограма')
plt.xlabel('Об\'єкти спостереження')
plt.ylabel('Відстань')
plt.show()
